/*
 * Copyright Boundary Devices
 *
 * SPDX-License-Identifier: GPL-2.0+
 */
#include <config.h>
#include <linux/kernel.h>
#include <asm/arch/ddr.h>
#ifndef CONFIG_ARCH_IMX8ULP
#include <asm/arch/lpddr4_define.h>
#endif

#ifdef CONFIG_IMX8MQ
#define VREF_FAST	8
#else
#define VREF_FAST	0
#endif
#define FREQ1_VREF_FAST	0
#define FREQ2_VREF_FAST	0

#ifdef WR_POST_EXT_3200
#define WR_POST_EXT 0x00020000
#else
#define WR_POST_EXT 0
#endif

#define CH2_VAL_INIT4	((LPDDR4_MR3 << 16) | WR_POST_EXT | VREF_FAST)
#define CH2_VAL_FREQ1_INIT4	((LPDDR4_MR3 << 16) | WR_POST_EXT | FREQ1_VREF_FAST)
#define CH2_VAL_FREQ2_INIT4	((LPDDR4_MR3 << 16) | WR_POST_EXT | FREQ2_VREF_FAST)

#ifdef CONFIG_DRATE_BYTE
#define DRATE_BYTE	(CONFIG_DRATE_BYTE << 4)
#else
#define DRATE_BYTE	(2 << 4)
#endif

#if CONFIG_DDR_MB == 1024
	/* Address map is from MSB 28: r14, r13-r0, b2-b0, c9-c0 */
#define CH2_VAL_DDRC_ADDRMAP0_R0	0x0000001F
#define CH2_VAL_DDRC_ADDRMAP6_R0	0x0F070707
#define CH2_VAL_DDRC_ADDRMAP7_R0	0x0f0f
#define CH2_VAL_DDRC_RFSHTMG_R0			0x007a00b4
#define CH2_VAL_DDRC_DRAMTMG14_R0		0xbc
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_R0		0x000c0012
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_R0		0x13
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_R0		0x00030005
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_R0		5

#elif CONFIG_DDR_MB == 2048
	/* Address map is from MSB 28: r15, r14, r13-r0, b2-b0, c9-c0 */
#define CH2_VAL_DDRC_ADDRMAP0_R0	0x0000001F
#define CH2_VAL_DDRC_ADDRMAP6_R0	0x07070707
#define CH2_VAL_DDRC_ADDRMAP7_R0	0x0f0f
#define CH2_VAL_DDRC_RFSHTMG_R0			0x007a0118
#define CH2_VAL_DDRC_DRAMTMG14_R0		0x0120
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_R0		0x000c001c
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_R0		0x1d
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_R0		0x00030007
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_R0		8
	/* Address map is from MSB 28: cs, r14, r13-r0, b2-b0, c9-c0 */
#define CH2_VAL_DDRC_ADDRMAP0_R1	0x00000016
#define CH2_VAL_DDRC_ADDRMAP6_R1	0x0F070707
#define CH2_VAL_DDRC_ADDRMAP7_R1	0x0f0f
#define CH2_VAL_DDRC_RFSHTMG_R1			0x007a00b4
#define CH2_VAL_DDRC_DRAMTMG14_R1		0xbc
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_R1		0x000c0012
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_R1		0x13
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_R1		0x00030005
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_R1		5

#elif CONFIG_DDR_MB == 4096
	/* Address map is from MSB 29: cs, r15, r14, r13-r0, b2-b0, c9-c0 */
#define CH2_VAL_DDRC_ADDRMAP0_R1	0x00000017
#define CH2_VAL_DDRC_ADDRMAP6_R1	0x07070707
#define CH2_VAL_DDRC_ADDRMAP7_R1	0x0f0f
#define CH2_VAL_DDRC_RFSHTMG_R1			0x007a0118
#define CH2_VAL_DDRC_DRAMTMG14_R1		0x0120
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_R1		0x000c001c
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_R1		0x1d
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_R1		0x00030007
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_R1		8
#elif CONFIG_DDR_MB == 8192
	/* Address map is from MSB 29: cs, r15, r14, r13-r0, b2-b0, c9-c0 */
#define CH2_VAL_DDRC_ADDRMAP0_R1	0x00000018
#define CH2_VAL_DDRC_ADDRMAP6_R1	0x07070707
#define CH2_VAL_DDRC_ADDRMAP7_R1	0x0f07
#define CH2_VAL_DDRC_RFSHTMG_R1			0x007a017c
#define CH2_VAL_DDRC_DRAMTMG14_R1		0x0184
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_R1		0x000c0026
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_R1		0x27
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_R1		0x0003000a
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_R1		0x0a
#else
#error unsupported memory size
#endif

#define LPDDR4_CS_R0	0x1	/* 0 rank bits, 1 chip select */
#define LPDDR4_CS_R1	0x3	/* 1 rank bit, 2 chip selects */

#if (CONFIG_DDR_RANK_BITS == 0) || !defined(CH2_VAL_DDRC_ADDRMAP0_R1)
#ifdef CH2_VAL_DDRC_ADDRMAP0_R0
#define CH2_LPDDR4_CS			LPDDR4_CS_R0
#define CH2_VAL_DDRC_ADDRMAP0		CH2_VAL_DDRC_ADDRMAP0_R0
#define CH2_VAL_DDRC_ADDRMAP6		CH2_VAL_DDRC_ADDRMAP6_R0
#define CH2_VAL_DDRC_ADDRMAP7		CH2_VAL_DDRC_ADDRMAP7_R0
#define CH2_VAL_DDRC_RFSHTMG		CH2_VAL_DDRC_RFSHTMG_R0
#define CH2_VAL_DDRC_DRAMTMG14		CH2_VAL_DDRC_DRAMTMG14_R0
#define CH2_VAL_DDRC_FREQ1_RFSHTMG	CH2_VAL_DDRC_FREQ1_RFSHTMG_R0
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14	CH2_VAL_DDRC_FREQ1_DRAMTMG14_R0
#define CH2_VAL_DDRC_FREQ2_RFSHTMG	CH2_VAL_DDRC_FREQ2_RFSHTMG_R0
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14	CH2_VAL_DDRC_FREQ2_DRAMTMG14_R0
#else
#error unsupported memory rank/size
#endif
/*
 * rank0 will succeed, even if really rank 1, so we need
 * to probe memory if rank0 succeeds
 */
#if defined(CH2_VAL_DDRC_ADDRMAP0_R0) && defined(CH2_VAL_DDRC_ADDRMAP0_R1)
#define CH2_LPDDR4_CS_NEW		LPDDR4_CS_R1
#define CH2_VAL_DDRC_ADDRMAP0_NEW	CH2_VAL_DDRC_ADDRMAP0_R1
#define CH2_VAL_DDRC_ADDRMAP6_NEW	CH2_VAL_DDRC_ADDRMAP6_R1
#define CH2_VAL_DDRC_ADDRMAP7_NEW	CH2_VAL_DDRC_ADDRMAP7_R1
#if defined(CONFIG_IMX8MP)
#define CH2_VAL_DDRC_RFSHTMG_NEW		CH2_VAL_DDRC_RFSHTMG_R1
#define CH2_VAL_DDRC_DRAMTMG14_NEW		CH2_VAL_DDRC_DRAMTMG14_R1
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_NEW		CH2_VAL_DDRC_FREQ1_RFSHTMG_R1
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_NEW	CH2_VAL_DDRC_FREQ1_DRAMTMG14_R1
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_NEW		CH2_VAL_DDRC_FREQ2_RFSHTMG_R1
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_NEW	CH2_VAL_DDRC_FREQ2_DRAMTMG14_R1
#endif
#endif

#elif (CONFIG_DDR_RANK_BITS == 1) || !defined(CH2_VAL_DDRC_ADDRMAP0_R0)
#ifdef CH2_VAL_DDRC_ADDRMAP0_R1
#define CH2_LPDDR4_CS			LPDDR4_CS_R1
#define CH2_VAL_DDRC_ADDRMAP0		CH2_VAL_DDRC_ADDRMAP0_R1
#define CH2_VAL_DDRC_ADDRMAP6		CH2_VAL_DDRC_ADDRMAP6_R1
#define CH2_VAL_DDRC_ADDRMAP7		CH2_VAL_DDRC_ADDRMAP7_R1
#define CH2_VAL_DDRC_RFSHTMG		CH2_VAL_DDRC_RFSHTMG_R1
#define CH2_VAL_DDRC_DRAMTMG14		CH2_VAL_DDRC_DRAMTMG14_R1
#define CH2_VAL_DDRC_FREQ1_RFSHTMG	CH2_VAL_DDRC_FREQ1_RFSHTMG_R1
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14	CH2_VAL_DDRC_FREQ1_DRAMTMG14_R1
#define CH2_VAL_DDRC_FREQ2_RFSHTMG	CH2_VAL_DDRC_FREQ2_RFSHTMG_R1
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14	CH2_VAL_DDRC_FREQ2_DRAMTMG14_R1
#else
#error unsupported memory rank/size
#endif

#if defined(CH2_VAL_DDRC_ADDRMAP0_R0) && defined(CH2_VAL_DDRC_ADDRMAP0_R1)
#define CH2_LPDDR4_CS_NEW		LPDDR4_CS_R0
#define CH2_VAL_DDRC_ADDRMAP0_NEW	CH2_VAL_DDRC_ADDRMAP0_R0
#define CH2_VAL_DDRC_ADDRMAP6_NEW	CH2_VAL_DDRC_ADDRMAP6_R0
#define CH2_VAL_DDRC_ADDRMAP7_NEW	CH2_VAL_DDRC_ADDRMAP7_R0
#if defined(CONFIG_IMX8MP)
#define CH2_VAL_DDRC_RFSHTMG_NEW		CH2_VAL_DDRC_RFSHTMG_R0
#define CH2_VAL_DDRC_DRAMTMG14_NEW		CH2_VAL_DDRC_DRAMTMG14_R0
#define CH2_VAL_DDRC_FREQ1_RFSHTMG_NEW		CH2_VAL_DDRC_FREQ1_RFSHTMG_R0
#define CH2_VAL_DDRC_FREQ1_DRAMTMG14_NEW	CH2_VAL_DDRC_FREQ1_DRAMTMG14_R0
#define CH2_VAL_DDRC_FREQ2_RFSHTMG_NEW		CH2_VAL_DDRC_FREQ2_RFSHTMG_R0
#define CH2_VAL_DDRC_FREQ2_DRAMTMG14_NEW	CH2_VAL_DDRC_FREQ2_DRAMTMG14_R0
#endif

#endif

#else
#error unsupported rank bits
#endif

#if (CONFIG_DDR_CHANNEL_CNT == 2)
#if (CONFIG_DDR_RANK_BITS == 0) && !defined(CH2_VAL_DDRC_ADDRMAP0_R0)
#error unsupported options
#endif
#if (CONFIG_DDR_RANK_BITS == 1) && !defined(CH2_VAL_DDRC_ADDRMAP0_R1)
#error unsupported options
#endif
#endif
