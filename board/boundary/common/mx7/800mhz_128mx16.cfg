/*
 * Copyright (C) 2013-2018 Boundary Devices
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

/*
 * Hynix: H5TC2G63FFR-PBA (DDR3L-1600 11-11-11)
 * Micron: MT41K128M16JT-125 IT:K (DDR3-1600)
 * RANK 0, BUS_WIDTH 32
 * 14 row + 3 bank + 10 col + 0 rank + 2 width = 29 = 512 MB
 *
 * RANK 0, BUS_WIDTH 64
 * 14 row + 3 bank + 10 col + 0 rank + 3 width = 30 = 1 GB
 *
 * RANK 1, BUS_WIDTH 32
 * 14 row + 3 bank + 10 col + 1 rank + 2 width = 30 = 1 GB
 *
 * RANK 1, BUS_WIDTH 64
 * 14 row + 3 bank + 10 col + 1 rank + 3 width = 31 = 2 GB
 *
 * tRCD 13125 ps
 * tRP 13125 ps
 * tCL 13125 ps
 * 396M DDR clock = .396G = 2525.2ps/clocks
 * 13125ps / 2525ps/clocks = 5.198 clocks
 */

#ifndef RANK
#error please define RANK
#endif
#ifndef BUS_WIDTH
#error please define BUS_WIDTH
#endif

#if RANK == 1
#define REG_RANK(reg, rank0, rank1) DATA 4, reg, rank1
#define R_RANK1(reg, rank1) DATA 4, reg, rank1
#else
#define REG_RANK(reg, rank0, rank1) DATA 4, reg, rank0
#define R_RANK1(reg, rank1)
#endif

#if BUS_WIDTH == 64
#define REG_BW(reg, bw32, bw64) DATA 4, reg, bw64
#define R_BW_64(reg, bw64) DATA 4, reg, bw64
#define R_RK_BW(reg, r0_bw32, r0_bw64, r1_bw32, r1_bw64) REG_RANK(reg, r0_bw64, r1_bw64)
#else
#define REG_BW(reg, bw32, bw64) DATA 4, reg, bw32
#define R_BW_64(reg, bw64)
#define R_RK_BW(reg, r0_bw32, r0_bw64, r1_bw32, r1_bw64) REG_RANK(reg, r0_bw32, r1_bw32)
#endif

DATA 4 0x30391000 0x00000002	/* SRC_DDRC_RCR - assert ddr phy reset */
DATA 4 0x307a0000 0x01040001	/* DDRC_MSTR - DDR3, burst 8, rank 1 */
DATA 4 0x307a01a0 0x80400003	/* DDRC_DFIUPD0 - disable auto req */
DATA 4 0x307a01a4 0x00100020	/* DDRC_DFIUPD1 - min/max delay line recalibration */
DATA 4 0x307a01a8 0x80100004	/* DDRC_DFIUPD2 - req controls */
DATA 4 0x307a0064 0x00400046	/* DDRC_RFSHTMG - */
DATA 4 0x307a0490 0x00000001	/* DDRC_MP_PCTRL_0 - port enable */
DATA 4 0x307a00d0 0x00020083	/* DDRC_INIT0 - wait 2 clocks after cke high */
DATA 4 0x307a00d4 0x00690000	/* DDRC_INIT1 - reset width */
DATA 4 0x307a00dc 0x09300004	/* DDRC_INIT3 - MR0/MR1 reg values */
DATA 4 0x307a00e0 0x04080000	/* DDRC_INIT4 - MR2/MR3 reg values */
DATA 4 0x307a00e4 0x00100004	/* DDRC_INIT5 - ZQ cal clks(512)*/
DATA 4 0x307a00f4 0x0000033f	/* DDRC_RANKCTL - */
DATA 4 0x307a0100 0x09081109	/* DDRC_DRAMTMG0 - RAS */
DATA 4 0x307a0104 0x0007020d	/* DDRC_DRAMTMG1 - tRC */
DATA 4 0x307a0108 0x03040407	/* DDRC_DRAMTMG2 - WL/RL */
DATA 4 0x307a010c 0x00002006	/* DDRC_DRAMTMG3 - tMRD */
DATA 4 0x307a0110 0x04020205	/* DDRC_DRAMTMG4 - tRCD, tRRD, tRP */
DATA 4 0x307a0114 0x03030202	/* DDRC_DRAMTMG5 - tCKE */
DATA 4 0x307a0120 0x00000803	/* DDRC_DRAMTMG8 - tXS */
DATA 4 0x307a0180 0x00800020	/* DDRC_ZQCTL0 - 32 NOP clks after short calibration */
DATA 4 0x307a0184 0x02000100	/* DDRC_ZQCTL1 - short calibration interval */
DATA 4 0x307a0190 0x02098204	/* DDRC_DFITMG0 - */
DATA 4 0x307a0194 0x00030303	/* DDRC_DFITMG1 - */
DATA 4 0x307a0200 0x0000001f	/* DDRC_ADDRMAP0 - only 1 CS, no rank bits */
DATA 4 0x307a0204 0x00161616	/* DDRC_ADDRMAP1 - bit(A25,A26,A27) for bank*/
DATA 4 0x307a0214 0x04040404	/* DDRC_ADDRMAP5 - bit(A10) for row bit 0, bit(A21) for row bit 11 */
DATA 4 0x307a0218 0x0f0f0404	/* DDRC_ADDRMAP6 - bit(A22) for row bit 12, A23 for row bit 13 */
DATA 4 0x307a0240 0x06000604	/* DDRC_ODTCFG - odt clocks */
DATA 4 0x307a0244 0x00000001	/* DDRC_ODTMAP - enable rank 0 */

DATA 4 0x30790020 DDR_PHY_OFFSET_RD_CON0_VAL	/* DDR_PHY_OFFSET_RD_CON0, read DQS calibration */
DATA 4 0x30790030 DDR_PHY_OFFSET_WR_CON0_VAL	/* DDR_PHY_OFFSET_WR_CON0, write DQS calibration */

#if 0
DATA 4, MX6_MMDC_P0_MDPDC, 0x0002002D
DATA 4, MX6_MMDC_P0_MDSCR, 0x00008000
/*
 * tRFC:0x3f		(160000/2525) = 63.36 = 64(0x40) clocks
 * tXS:0x43		(170000/2525) = 67.32 = 68(0x44) clocks
 * tXP:b'010'		(7500/2525) = 2.97 = 3 clocks
 * tXPDLL:b'1001'	(24000/2525) = 9.505 = 10(0x0a) clocks
 * tFAW:b'10011'	(50000/2525) = 19.80 = 20(0x14) clocks
 * tCL:b'0011'		(13125/2525) = 5.198 = 6 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG0, 0x3f435333
/*
 * tRCD:b'101'		(13125/2525) = 5.198 = 6 clocks
 * tRP:b'101'		(13125/2525) = 5.198 = 6 clocks
 * tRC:b'10100'		(50625/2525) = 20.049 = 21(0x15) clocks
 * tRAS:b'01110'	(37500/2525) = 14.851 = 15(0x0f) clocks
 * tRPA:b'1'		(tRP[+1]) = 7 clocks
 * b'000'
 * tWR:b'101'		(15000/2525) = 5.940 = 6 clocks
 * tMRD:b'1011'		(max tMRD 4, tMOD 12) = 12(0xc) clocks
 * b'00'
 * tCWL:b'011'		(tCL-1) = 5 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG1, 0xb68e8b63
/*
 * b'0000000'
 * tDLLK:0x1ff(9 bits), 512(0x200) clocks (Jedec for DDR3)
 * b'0000000'
 * tRTP:b'011'		MAX(4, (7500/2525)) = 2.970 = 4 clocks
 * tWTR:same bank b'011' MAX(4, (7500/2525)) = 2.970 = 4 clocks
 * tRRD:b'011'		MAX(4, (5000/2525)) = 1.980 = 4 clocks
 */
DATA 4, MX6_MMDC_P0_MDCFG2, 0x01ff00db
/*
 * RTW_SAME: 2 cycles,
 * WTR_DIFF: 3 cycles,
 * WTW_DIFF: 3 cycles,
 * RTW_DIFF: 2 cycles,
 * RTR_DIFF: 2 cycles
 */
DATA 4, MX6_MMDC_P0_MDRWD, 0x0f9f26d2
/*
 * tXPR:0x43		(170000/2525) = 67.32 = 68(0x44) clocks
 * SDE_to_RST:0x10: 14 cycles, (Jedec)
 * RST_to_CKE:0x23: 33 cycles	(Jedec)
 */
DATA 4, MX6_MMDC_P0_MDOR, 0x00431023
DATA 4, MX6_MMDC_P0_MDOTC, 0x00333030
DATA 4, MX6_MMDC_P0_MDPDC, 0x0002556D
/*
 * RANK 0/1, BUS_WIDTH 32: end of CS0 US 0x30000000-1
 * RANK 0/1, BUS_WIDTH 64: end of CS0 US 0x50000000-1
 */
REG_BW(MX6_MMDC_P0_MDASP, 0x00000017, 0x00000027)
/*
 * RANK 0: BUS_WIDTH 32: 14 rows, 1 CS, 0x83190000
 * RANK 0: BUS_WIDTH 64: 14 rows, 1 CS, 0x831a0000
 * RANK 1: BUS_WIDTH 32: 14 rows, 2 CS, 0xc3190000
 * RANK 1: BUS_WIDTH 64: 14 rows, 2 CS, 0xc31a0000
 */
R_RK_BW(MX6_MMDC_P0_MDCTL, 0x83190000, 0x831a0000, 0xc3190000, 0xc31a0000)
DATA 4, MX6_MMDC_P0_MDSCR, 0x04008032	/* MR2, tCWL=5, RZQ/2 */
R_RANK1(MX6_MMDC_P0_MDSCR, 0x0400803a)
DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033	/* MR3 */
R_RANK1(MX6_MMDC_P0_MDSCR, 0x0000803b)
DATA 4, MX6_MMDC_P0_MDSCR, 0x00048031	/* MR1 Rtt=RZQ/4 OD=RZQ/6*/
R_RANK1(MX6_MMDC_P0_MDSCR, 0x00048039)
/* A12 - 1 dll on(fast exit), tCL 6 */
DATA 4, MX6_MMDC_P0_MDSCR, 0x15208030	/* MR0 FastExit, tWR=6(b'010'), Dll reset, tCL=6*/
R_RANK1(MX6_MMDC_P0_MDSCR, 0x15208038)
DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040	/* ZQ calibration */
R_RANK1(MX6_MMDC_P0_MDSCR, 0x04008048)
/* force a calibration */
DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xa1390003
R_BW_64(MX6_MMDC_P1_MPZQHWCTRL, 0xa1390003)
/*
 * 4 refreshes at a time, at 32 Khz
 */
DATA 4, MX6_MMDC_P0_MDREF, 0x00005800
DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00022227
R_BW_64(MX6_MMDC_P1_MPODTCTRL, 0x00022227)

DATA 4, MX6_MMDC_P0_MPDGCTRL0, MX6_MMDC_P0_MPDGCTRL0_VAL
DATA 4, MX6_MMDC_P0_MPDGCTRL1, MX6_MMDC_P0_MPDGCTRL1_VAL
R_BW_64(MX6_MMDC_P1_MPDGCTRL0, MX6_MMDC_P1_MPDGCTRL0_VAL)
R_BW_64(MX6_MMDC_P1_MPDGCTRL1, MX6_MMDC_P1_MPDGCTRL1_VAL)
DATA 4, MX6_MMDC_P0_MPRDDLCTL, MX6_MMDC_P0_MPRDDLCTL_VAL
R_BW_64(MX6_MMDC_P1_MPRDDLCTL, MX6_MMDC_P1_MPRDDLCTL_VAL)
DATA 4, MX6_MMDC_P0_MPWRDLCTL, MX6_MMDC_P0_MPWRDLCTL_VAL
R_BW_64(MX6_MMDC_P1_MPWRDLCTL, MX6_MMDC_P1_MPWRDLCTL_VAL)
DATA 4, MX6_MMDC_P0_MPWLDECTRL0, MX6_MMDC_P0_MPWLDECTRL0_VAL
DATA 4, MX6_MMDC_P0_MPWLDECTRL1, MX6_MMDC_P0_MPWLDECTRL1_VAL
R_BW_64(MX6_MMDC_P1_MPWLDECTRL0, MX6_MMDC_P1_MPWLDECTRL0_VAL)
R_BW_64(MX6_MMDC_P1_MPWLDECTRL1, MX6_MMDC_P1_MPWLDECTRL1_VAL)

DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
R_BW_64(MX6_MMDC_P1_MPMUR0, 0x00000800)
DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
#endif
