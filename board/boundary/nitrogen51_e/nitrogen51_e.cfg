/*
 * Copyright (C) 2013 Boundary Devices
 *
 * SPDX-License-Identifier:	GPL-2.0+
 *
 * Refer docs/README.imxmage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */
/* H5PS1G63JFR-S5C-C */

/* image version */
IMAGE_VERSION 1

/*
 * Boot Device : one of
 * spi, sd (the board has no nand neither onenand)
 */
BOOT_FROM      spi

#define __ASSEMBLY__
#include <config.h>

/*
 * 512MB board uses CS0 and CS1, we will disable CS1 if ram doesn't appear to work
 */
#if CONFIG_DDR_MB==512
#define USE_CSD1
#endif

/* Setting IOMUXC */
DATA 4 0x73fa8418 0x000000e0	/* SW_PAD_CTL_PAD_EIM_D26, usb OTG power off */
DATA 4 0x73fa8084 0x00000001	/* SW_MUX_CTL_PAD_EIM_D26, ALT1 kpp column 7, GPIO on next board */

DATA 4 0x73fa88a0 0x200		/* SW_PAD_CTL_GRP_INMODE1, ddr2 input type */
DATA 4 0x73fa850c 0x20c3	/* SW_PAD_CTL_PAD_EIM_SDODT1, 100K Pull Down, medium drive strength */
DATA 4 0x73fa8510 0x20c3	/* SW_PAD_CTL_PAD_EIM_SDODT0, 100K Pull Down, medium drive strength */
DATA 4 0x73fa883c 0x3		/* SW_PAD_CTL_GRP_DDR_A0, (a0-a7)Medium drive strength */
DATA 4 0x73fa8848 0x3		/* SW_PAD_CTL_GRP_DDR_A1, (a8-a14,ba0-ba2)Medium drive strength */
DATA 4 0x73fa84b8 0xe3		/* SW_PAD_CTL_PAD_DRAM_SDCLK1, medium drive strength */
DATA 4 0x73fa84bc 0x43		/* SW_PAD_CTL_PAD_DRAM_SDQS0, Disable pull down */
DATA 4 0x73fa84c0 0x43		/* SW_PAD_CTL_PAD_DRAM_SDQS1, Disable pull down */
DATA 4 0x73fa84c4 0x43		/* SW_PAD_CTL_PAD_DRAM_SDQS2, Disable pull down */
DATA 4 0x73fa84c8 0x43		/* SW_PAD_CTL_PAD_DRAM_SDQS3, Disable pull down */
DATA 4 0x73fa8820 0x0		/* SW_PAD_CTL_GRP_DDRPKS, select keeper */
DATA 4 0x73fa84a4 0x3		/* SW_PAD_CTL_PAD_DRAM_RAS, Medium Drive Strength */
DATA 4 0x73fa84a8 0x3		/* SW_PAD_CTL_PAD_DRAM_CAS, Medium Drive Strength */
DATA 4 0x73fa84ac 0xe3		/* SW_PAD_CTL_PAD_DRAM_SDWE, Medium Drive Strength */
DATA 4 0x73fa84b0 0xe3		/* SW_PAD_CTL_PAD_DRAM_SDCKE0, Medium Drive Strength */
DATA 4 0x73fa84b4 0xe3		/* SW_PAD_CTL_PAD_DRAM_SDCKE1, Medium Drive Strength */
DATA 4 0x73fa84cc 0xe3		/* SW_PAD_CTL_PAD_DRAM_CS0, Medium Drive Strength */
DATA 4 0x73fa84d0 0xe3		/* SW_PAD_CTL_PAD_DRAM_CS1, Medium Drive Strength */

#ifndef  USE_CSD1
DATA 4 0x73fa882c 0x2		/* SW_PAD_CTL_GRP_DRAM_B4 (D24-D31), Medium drive strength */
DATA 4 0x73fa88a4 0x2		/* SW_PAD_CTL_GRP_DRAM_B0 (D0-D7), Medium drive strength */
DATA 4 0x73fa88ac 0x2		/* SW_PAD_CTL_GRP_DRAM_B1 (D8-D15, Medium drive strength */
DATA 4 0x73fa88b8 0x2		/* SW_PAD_CTL_GRP_DRAM_B2 (D16-D23), Medium drive strength */
#endif
/*
 * Setting DDR for micron
 * 13 Rows, 10 Cols, 32 bit, SREF=4 Micron Model
 * CAS=3 BL=4
 */

DATA 4 0x83fd9000 0x82a20000	/* ESDCTL_ESDCTL0 */
#ifdef USE_CSD1
DATA 4 0x83fd9008 0x82a20000	/* ESDCTL_ESDCTL1 */
#endif
DATA 4 0x83fd9010 0x055ad0d0	/* ESDCTL_ESDMISC */
/*
 * Samsung K4T1G164Q[E/F]-BCE6000 - E6 means DDR2-667, tCK, CL=3 : 5 - 8 ns
 * 					K4T1G164QF-BCE6000
 * tRFC(refresh to any command)		127.5 ns (26 clocks)	Bits 31-28: 3 = 26 clocks (130 ns)(ESDCTL0[23] is double tRFC)
 * tXSR(exit self refresh)		137.5 ns (28 clocks)	Bits 27-24: 3 = 28 clocks (140 ns)
 * tXP (exit power down to command)	2 clocks		Bits 23-21: 1 = 2 clocks (10 ns)
 * tWTR(write to read command)		7.5 ns (2 clocks)	Bits 20:    1 = 2 clocks (10 ns)
 * tRP (row precharge)			15 ns (3 clocks)	Bits 19-18: 1 = 3 clocks (15 ns)
 * tMRD(load mode register)		2 clocks		Bits 17-16: 1 = 2 clocks (10 ns)
 * tRAS(Active to precharge Command)	45 ns (9 clocks)	Bits 15-12: 8 = 9 clocks (45 ns), was 7 = 8 clocks (40ns)
 * tRRD(Active Bank A to Active B)	10 ns (2 clocks)	Bits 11-10: 1 = 2 clocks (10 ns)
 * tWR (write to precharge)		15 ns (3 clocks)	Bits 7:     1 = 3 clocks (15 ns)
 * tRCD(row to columnn delay)		15 ns (3 clocks)	Bits 6-4:   2 = 3 clocks (15 ns)
 * tRC(ACTIVE to ACTIVE, same bank)	60 ns (12 clocks)	Bits 3-0:   0xb - 12 clocks(60ns), was 0xa = 11 clocks (55 ns)
 */
DATA 4 0x83fd9004 0x333584ab	/* ESDCTL_ESDCFG0 */
#ifdef USE_CSD1
DATA 4 0x83fd900C 0x333584ab	/* ESDCTL_ESDCFG1 */
#endif

/* Init DRAM on CS0 */
/* ESDCTL_ESDSCR */
DATA 4 0x83fd9014 0x04008008	/* PRECHARGE ALL */
DATA 4 0x83fd9014 0x0000801a	/* emrs(2) */
DATA 4 0x83fd9014 0x0000801b	/* emrs(3) */
DATA 4 0x83fd9014 0x00428019	/* emrs(1) - 150 ohms ODT */
DATA 4 0x83fd9014 0x07328018	/* MRS (load mode register) */
DATA 4 0x83fd9014 0x04008008	/* PRECHARGE ALL */
DATA 4 0x83fd9014 0x00008010	/* auto-refresh */
DATA 4 0x83fd9014 0x00008010	/* auto-refresh */
DATA 4 0x83fd9014 0x06328018	/* MRS (load mode register) */
DATA 4 0x83fd9014 0x03c28019	/* emrs(1) - calibrate */
DATA 4 0x83fd9014 0x00428019	/* emrs(1) - OCD calibration mode exit */
DATA 4 0x83fd9014 0x00008000	/* nop */

#ifdef USE_CSD1
/* Init DRAM on CS1 */
DATA 4 0x83fd9014 0x0400800c	/* PRECHARGE ALL */
DATA 4 0x83fd9014 0x0000801e	/* emrs(2) */
DATA 4 0x83fd9014 0x0000801f	/* emrs(3) */
DATA 4 0x83fd9014 0x0042801d	/* emrs(1) - 50 ohms ODT vs 0x0000801d */
DATA 4 0x83fd9014 0x0732801c	/* MRS (load mode register) */
DATA 4 0x83fd9014 0x0400800c	/* PRECHARGE ALL */
DATA 4 0x83fd9014 0x00008014	/* auto-refresh */
DATA 4 0x83fd9014 0x00008014	/* auto-refresh */
DATA 4 0x83fd9014 0x0632801c	/* MRS (load mode register) */
DATA 4 0x83fd9014 0x03c2801d	/* emrs(1) - calibrate */
DATA 4 0x83fd9014 0x0042801d	/* emrs(1) - OCD calibration mode exit */
DATA 4 0x83fd9014 0x00008004	/* nop */
#endif

/* Write to CTL0 */
DATA 4 0x83fd9000 0xb2a20000	/* refresh 4 rows each refresh clock */

#ifdef USE_CSD1
/* Write to CTL1 */
DATA 4 0x83fd9008 0xb2a20000
#endif


DATA 4 0x83fd9010 0x055af6d0	/* ESDMISC */
DATA 4 0x83fd9020 0x00f48c00	/* ESD_DLY1 - D0-D7 read delay */
DATA 4 0x83fd9024 0x00f48c00	/* ESD_DLY2 - D8-D15 read delay */
DATA 4 0x83fd9028 0x00f48c00	/* ESD_DLY3 - D16-D23 read delay */
DATA 4 0x83fd902c 0x00f48c00	/* ESD_DLY4 - D24-D31 read delay */
DATA 4 0x83fd9030 0x00f48000	/* ESD_DLY5 - D0-D31 write delay */

DATA 4 0x83fd9034 0x88000000	/* DQS gating delays */
DATA 4 0x83fd9014 0x00000000	/* ESDSCR, AXI address readies normal operation */
