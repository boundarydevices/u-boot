#!/bin/bash
savedir=../u-boot-images
mkdir -p $savedir
rm -fr $savedir/*
boards=$(cd configs && grep -l DEFCONFIG * | sed 's/_defconfig.*$//');
cpus=`grep -c '^processor' /proc/cpuinfo` ;
jobs=`expr $cpus + 2` ;
numboards=0;
numsuccess=0;
numfailures=0;
for board in $boards ; do
    if [ $board != "mx6qsabrelite" ] ; then
	cnt=`sed -n "/CONFIG_ARCH_IMX8M=/=" configs/${board}_defconfig`
	if [ "${cnt}" == "" ] ; then
		cnt=`sed -n "/CONFIG_ARCH_IMX8ULP=/=" configs/${board}_defconfig`
	fi
	if [ "${cnt}" == "" ] ; then
		cnt=`sed -n "/CONFIG_ARCH_MEDIATEK=/=" configs/${board}_defconfig`
	fi
	if [ "${cnt}" != "" ] ; then
		export ARCH=arm64
		export CROSS_COMPILE=aarch64-linux-gnu-
	else
		export ARCH=arm
		export CROSS_COMPILE=arm-linux-gnueabihf-
	fi

	echo -e "\n\n== building ${board}_defconfig ==\n\n";
	make distclean ; make ${board}_defconfig
	make all -j $jobs
	if [ $? -ne 0 ]; then
		numfailures=`expr $numfailures + 1`;
		echo -e "\n\n\n!!!!!!!! build failure for $board !!!!!!!!!!!!\n\n";
		read line;
	else
		if [ "${ARCH}" == "arm64" ] ; then
			cnt=`sed -n "/CONFIG_BINMAN=/=" .config`
			if [ "${cnt}" == "" ] ; then
				echo "Skipping non-binman build"
				continue;
			fi
			make flash.bin -j4
			cp -fv flash.bin ${savedir}/u-boot.${board} ;
		        ls -l ${savedir}/u-boot.${board};
		else
			cnt=`sed -n "/CONFIG_OF_CONTROL=/=" configs/${board}_defconfig`
			if [ "${cnt}" != "" ] ; then
				uboot=u-boot-dtb.imx
			else
				uboot=u-boot.imx
			fi
		        cp -fv $uboot $savedir/u-boot.${board};
		        ls -l $savedir/u-boot.${board};
		fi
		numsuccess=`expr $numsuccess + 1`;
	fi
	defcfg=$(sed -n -e's/CONFIG_DEFCONFIG="\(.\{1,\}\)"/\1/p' configs/${board}_defconfig)
	if [ "$defcfg" != "$board" ] ; then
		if [ $board != "nitrogen8m" ] ; then
			echo -e "\n\n\n!!!!!!!! $board does not match $defcfg !!!!!!!!!!!!\n\n";
			exit 1;
		fi
	fi
	numboards=`expr $numboards + 1`;
    fi
    if [ $board == "nitrogen8m_2g" ] ; then
	cp -fv flash.bin ${savedir}/u-boot.nitrogen8m ;
    fi
done
make distclean;
echo -e "\n\n\nbuilt for ${numboards} boards. ${numsuccess} succeeded and ${numfailures} failed";
