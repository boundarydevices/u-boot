// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2023 Boundary Devices
 */
#include "bd-universal.h"

&IOMUX {
	pinctrlm(_MIPI_(PWM)) {
		pins_group(pulldn,
			PD(PWM_OUT, PAD_PULLDN),
			DN(PWM)
		)
	};

	pinctrlm(sc18is602b) {
		pins_group(pulldn,
			PD(ENABLE, PAD_PULLDN),
			DN(ENABLE)
		)
	};

	pinctrlm(sn65dsi83) {
		pd_irq_enable(
			PD(IRQ, PAD_PULLDNIRQ),
			DN(IRQ),
			PD(ENABLE, PAD_PULLDN),
			DN(ENABLE)
		)
	};

	pinctrlm_ts(atmel) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	pinctrlm_ts(ft5x06) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	/* only for panel-lxd-m8509a */
	pinctrlm_ts2(ft5x06, 3) {
		pd_irq_reset(
			PD(PWM, PAD_PULLUPIRQ),
			UP(PWM),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	pinctrlm_ts(gslx680) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	pinctrlm_ts(gt911) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			/* driver writes levels, instead of active/inactive */
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	pinctrlm_ts(ili251x) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};

	pinctrlm_ts(st1633) {
		pd_irq_reset(
			PD(TS_IRQ, PAD_PULLUPIRQ),
			UP(TS_IRQ),
			PD(TS_RESET, PAD_PULLDN),
			DN(TS_RESET)
		)
	};
};

#include "panel-com50h5n03ulc.dtsi"
#include "panel-cs005-0004-03.dtsi"
#include "panel-dmt050wvnxcmi.dtsi"
#include "panel-dmt055fhnmcmi.dtsi"
#include "panel-et055fh06.dtsi"
#include "panel-lcd133-070.dtsi"
#include "panel-lcm-jm430.dtsi"
#include "panel-ls050t1sx12.dtsi"
#include "panel-ltk0680ytmdb.dtsi"
#include "panel-ltk080a60a004t.dtsi"
#include "panel-lxd-m8509a.dtsi"
#include "panel-m101nwwb.dtsi"
#include "panel-tcxd070iblmat77.dtsi"
#include "panel-zwt055azh.dtsi"

/ {
	aliases {
		dsi(backlight_mipi) = &mipi_ref(backlight);
		dsi(backlight_mipi_alt) = &mipi_ref2(backlight, alt);
		dsi1(fb_mipi) = &mipi_ref(fb);
		dsi(lcdif) = &_MIPI_(DISPLAY);
		dsi1(mipi) = &mipi_ref(fb);
		mipi_ref(dsi) = &_MIPI_(DSI);
		mipi_ref(dsi_bridge) = &_MIPI_(DSI);
		mipi_ref(to_lvds) = &mipi_ref2(to, lvds);
		dsi1(pwm_mipi) = &_MIPI_(PWM);
		dsi(spi_lcd) = &mipi_ref2(spi, lcd);
		dsi1(t_mipi) = &mipi_ref(t);
		dsi(ts_atmel_mt) = &ts_mipi_ref2(atmel, mt);
		dsi(ts_ft5x06) = &ts_mipi_ref(ft5x06);
		dsi(ts_ft5x06_3) = &ts_mipi_ref2(ft5x06, 3);
		dsi(ts_ft7250) = &ts_mipi_ref(ft7250);
		dsi(ts_goodix) = &ts_mipi_ref(goodix);
		dsi(ts_gsl1680) = &ts_mipi_ref(gsl1680);
		dsi(ts_ili251x) = &ts_mipi_ref(ili251x);
		dsi(ts_st1633i) = &ts_mipi_ref(st1633i);
	};

	mipi_ref_grp(backlight) {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		default-brightness-level = <8>;
		/*
		 * panel-common takes cares of backlight,
		 * skip old style blank/unblank
		 */
		display = <&mipi_ref(backlight)>;
		pwms = <&_MIPI_(PWM) 0 30000 0>;		/* 33.3 Khz */
		status = "disabled";
	};
};

&_MIPI_(I2C_BUS) {
	mipi_ref_grp2(backlight, alt)@66 {
		alias = <&mipi_ref2(backlight, alt)>;
		compatible = "rohm,bd2606";
		default-brightness = <32>;	/* 63 is max */
		display = <&_MIPI_(SUBSYSTEM)>;
		label = "bklght-bd2606";
		led-sources = <0 1 2 3 4 5>;
		reg = <0x66>;
		status = "disabled";
	};

	mipi_ref2(spi, lcd): spi@2f {
		compatible = "nxp,sc18is602b";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ref(sc18is602b)>;
		reg = <0x2f>;
		reset-gpios = GP(ENABLE, GPIO_ACTIVE_LOW);
		status = "disabled";
		#address-cells = <1>;
		#size-cells = <0>;

		mipi_ref_grp2(spidev, lcd)@0 {
			compatible = "spidev";
			spi-cpha;
			spi-cpol;
			spi-max-frequency = <20000000>;
			reg = <0>;
		};
	};

	ts_mipi_ref_grp2(atmel, mt)@4a {
		compatible = "atmel,maxtouch";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(atmel)>;
		reg = <0x4a>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
	};

	ts_mipi_ref_grp(ft5x06)@38 {
		compatible = "edt,ft5x06-ts";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(ft5x06)>;
		reg = <0x38>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
	};

	ts_mipi_ref_grp2(ft5x06, 3)@38 {
		compatible = "edt,ft5x06-ts";
		interrupts-extended = GP(PWM, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(ft5x06_3)>;
		reg = <0x38>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		wakeup-gpios = GP(PWM, GPIO_ACTIVE_LOW);
	};

	ts_mipi_ref_grp(ft7250)-ft7250@38 {
		compatible = "edt,ft7250";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(ft5x06)>;
		reg = <0x38>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
	};

	ts_mipi_ref_grp(goodix)@5d {
		compatible = "goodix,gt9271";
		display = <&_MIPI_(SUBSYSTEM)>;
		esd-recovery-timeout-ms = <2000>;
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_LEVEL_HIGH);
		irq-gpios = GP(TS_IRQ, GPIO_ACTIVE_HIGH);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(gt911)>;
		reg = <0x5d>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_HIGH);
		status = "disabled";
	};

	ts_mipi_ref_grp(gsl1680)@40 {
		compatible = "silead,gsl1680";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(gslx680)>;
		power-gpios = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		reg = <0x40>;
		status = "disabled";
		touchscreen-size-x = <480>;	/* swapped below */
		touchscreen-size-y = <800>;
		touchscreen-swapped-x-y;
	};

	ts_mipi_ref_grp(ili251x)@41 {
		compatible = "ilitek,ili251x";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(ili251x)>;
		reg = <0x41>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		touchscreen-size-x = <0x3fff>;
		touchscreen-size-y = <0x3fff>;
	};

	ts_mipi_ref_grp(st1633i)@55 {
		compatible = "sitronix,st1633i";
		interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
		/* pins used by touchscreen */
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrlm_ts_ref(st1633)>;
		reg = <0x55>;
		reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
		status = "disabled";
		wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
	};
};

&_MIPI_(DSI) {
	status = "disabled";

	mipi_ref(fb): panel@0 {
		backlight = <&mipi_ref(backlight)>;
		bits-per-color = <8>;
		bridge-de-active = <0>;
		bus-format = "rgb888";
#if defined(MIPI_PIXEL_CLOCK)
		clocks = _MIPI_(PHY_CLOCK), _MIPI_(PIXEL_CLOCK);
		clock-names = "mipi_clk", "pixel_clock";
#else
		clocks = _MIPI_(PHY_CLOCK);
		clock-names = "mipi_clk";
#endif
		compatible = "panel,common";
		dsi-format = "rgb888";
		dsi-lanes = <4>;
#if 0
		/* u-boot will set this where appropriate */
		enable-gpios = GP_LTK08_MIPI_EN;
		mipi-cmds = <&mipi_cmds_ltk080a60a004t>;
#endif
		mode-skip-eot;
		mode-video;
		mode-video-burst;
		panel-height-mm = <136>;
		panel-width-mm = <217>;
		pinctrl-names = "sn65dsi83";
		pinctrl-0 = <&pinctrlm_ref(sn65dsi83)>;
		power-supply = <&reg_vref_5v0>;
		reg = <0>;
		sn65dsi83 = <&mipi_ref(to_lvds)>;
		spwg;

		display-timings {
			mipi_ref(t): t-dsi-default {
				/* m101nwwb by default */
				clock-frequency = <71700000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <151>;
				vback-porch = <2>;
				vfront-porch = <28>;
				hsync-len = <4>;
				vsync-len = <1>;
#ifdef MIPI_HSYNC_HIGH
				hsync-active = <1>;
				vsync-active = <1>;
#else
				hsync-active = <0>;
				vsync-active = <0>;
#endif
				de-active = <1>;
			};
		};

		mipi_ref_grp2(to, lvds) {
			alias = <&mipi_ref2(to, lvds)>;
			enable-gpios = GP(ENABLE, GPIO_ACTIVE_HIGH);
			i2c-address = <0x2c>;
			i2c-bus = <&_MIPI_(I2C_BUS)>;
			interrupts-extended = GP(IRQ, IRQ_TYPE_LEVEL_HIGH);
			status = "disabled";
		};

#ifdef MIPI_ADD_PORT
		port {
			mipi_ref(panel1_in): endpoint {
				remote-endpoint = <&mipi_ref(dsi_out)>;
			};
		};
#endif
	};

#ifdef MIPI_ADD_PORT
	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@1 {
			reg = <1>;

			mipi_ref(dsi_out): endpoint {
				remote-endpoint = <&mipi_ref(panel1_in)>;
			};
		};
	};
#endif
};

&_MIPI_(PWM) {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrlm_ref(_MIPI_(PWM))>;
	status = "okay";
};

#ifndef SKIP_LONTIUM_DAUGHTER_BOARDS
/* Some board's touch connector is already behind i2c mux */
/* So this should not be included */
&IOMUX {
	pinctrlm2(lt8912, 2) {
		pd_irq_reset(
#define GPIRQ_LT8912_2	GP(IRQ, IRQ_TYPE_LEVEL_LOW)
			PD(IRQ, PAD_PULLUPIRQ),
			UP(IRQ),
#define GP_LT8912_2_RESET	GP(ENABLE, GPIO_ACTIVE_LOW)
			PD(ENABLE, PAD_PULLDN),
			DN(ENABLE)
		)
	};
};

#include "panel-er-tft050.dtsi"

/ {
	aliases {
		dsi(pca9540) = &mipi_ref(pca9540);
		dsi(pca9540_2) = &mipi_ref(pca9540_2);
		dsi(pca9546) = &mipi_ref(pca9546);
		dsi(ts_ft5x06_2) = &ts_mipi_ref(ft5x06_2);
		dsi(ts_ft5x06_4) = &ts_mipi_ref(ft5x06_4);
		dsi(ts_goodix2) = &ts_mipi_ref(goodix2);
	};
};

&_MIPI_(I2C_BUS) {
	mipi_ref(pca9540): i2cmux9540@70 {
		compatible = "nxp,pca9540";
		reg = <0x70>;
		status = "disabled";
		#address-cells = <1>;
		#size-cells = <0>;

		_MIPI_(I2C_BUS)@0 {
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			/* Touch screens */
			ts_mipi_ref_grp2(ft5x06, 4)@38 {
				compatible = "edt,ft5x06-ts";
				interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrlm_ts_ref(ft5x06)>;
				reg = <0x38>;
				reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
				wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
			};
		};

		_MIPI_(I2C_BUS)@1 {
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_ref_grp2(lt8912, 2)@48 {
				compatible = "lontium,lt8912";
				display-dsi = <&mipi_ref(fb)>;
				interrupts-extended = GPIRQ_LT8912_2;
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrlm_ref2(lt8912, 2)>;
				reg = <0x48>;
				reset-gpios = GP_LT8912_2_RESET;
			};
		};
	};

	mipi_ref(pca9540_2): i2cmux9540_2@70 {
		compatible = "nxp,pca9540";
		reg = <0x70>;
		status = "disabled";
		#address-cells = <1>;
		#size-cells = <0>;

		_MIPI_(I2C_BUS)@0 {
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			/* Touch screens */
			touchscreen@5d {
				compatible = "goodix,gt911";
				display = <&_MIPI_(SUBSYSTEM)>;
				esd-recovery-timeout-ms = <2000>;
				interrupts-extended = GP(TS_IRQ, IRQ_TYPE_LEVEL_HIGH);
				irq-gpios = GP(TS_IRQ, GPIO_ACTIVE_HIGH);
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrlm_ts_ref(gt911)>;
				reg = <0x5d>;
				reset-gpios = GP(TS_RESET, GPIO_ACTIVE_HIGH);
			};
		};

		mipi_ref(tc358767_bus): _MIPI_(I2C_BUS)@1 {
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
		};
	};

	mipi_ref(pca9546): i2cmux9546@70 {
		compatible = "nxp,pca9546";
		reg = <0x70>;
		status = "disabled";
		#address-cells = <1>;
		#size-cells = <0>;

		_MIPI_(I2C_BUS)@0 {
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			lt8912@48 {
				compatible = "lontium,lt8912";
				ddc-i2c-bus = <&mipi_ref(ddc_i2c_bus)>;
				display-dsi = <&mipi_ref(fb)>;
				reg = <0x48>;
				reset-gpios = <&mipi_ref(max7323) 0 GPIO_ACTIVE_LOW>;
			};
		};

		mipi_ref(ddc_i2c_bus): _MIPI_(I2C_BUS)@1 {
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
			/* edid  @50 */
		};

		_MIPI_(I2C_BUS)@2 {
			clock-frequency = <100000>;
			reg = <2>;
			#address-cells = <1>;
			#size-cells = <0>;

			/* Touch screens */
			ts_mipi_ref_grp2(ft5x06, 2)@38 {
				compatible = "edt,ft5x06-ts";
				interrupts-extended = GP(TS_IRQ, IRQ_TYPE_EDGE_FALLING);
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrlm_ts_ref(ft5x06)>;
				reg = <0x38>;
				reset-gpios = GP(TS_RESET, GPIO_ACTIVE_LOW);
				wakeup-gpios = GP(TS_IRQ, GPIO_ACTIVE_LOW);
				status = "disabled";
			};

			ts_mipi_ref_grp(goodix2)@5d {
				compatible = "goodix,gt9271";
				display = <&_MIPI_(SUBSYSTEM)>;
				esd-recovery-timeout-ms = <2000>;
				interrupts-extended = GP(TS_IRQ, IRQ_TYPE_LEVEL_HIGH);
				irq-gpios = GP(TS_IRQ, GPIO_ACTIVE_HIGH);
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrlm_ts_ref(gt911)>;
				reg = <0x5d>;
				reset-gpios = GP(TS_RESET, GPIO_ACTIVE_HIGH);
				status = "disabled";
			};
		};

		_MIPI_(I2C_BUS)@3 {
			clock-frequency = <100000>;
			reg = <3>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_ref_grp(max7323)@68 {
				compatible = "maxim,max7323";
				gpio-controller;
				reg = <0x68>;
				#gpio-cells = <2>;
			};
		};
	};
};
#endif
